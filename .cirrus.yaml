install_red_venv: &INSTALL_RED_VENV
  install_red_script: |-
    python3.9 -m venv ~/redenv

    source ~/redenv/bin/activate

    python -m pip install -U pip setuptools wheel
    python -m pip install -U git+https://github.com/Cog-Creators/Red-DiscordBot@V3/develop#egg=Red-DiscordBot[postgres]
install_pyenv_and_red: &INSTALL_PYENV_AND_RED
  install_pyenv_script: |-
    command -v pyenv && pyenv update || curl https://pyenv.run | bash

    echo 'export PATH="'$HOME'/.pyenv/bin:$PATH"' >> ~/.profile
    echo 'eval "$(pyenv init -)"' >> ~/.profile
    echo 'eval "$(pyenv init --path)"' >> ~/.profile
    echo 'eval "$(pyenv virtualenv-init -)"' >> ~/.profile
    source ~/.profile

    CONFIGURE_OPTS=--enable-optimizations pyenv install 3.9.7 -v

    pyenv global 3.9.7
  install_red_script: |-
    python3.9 -m venv ~/redenv

    source ~/redenv/bin/activate

    python -m pip install -U pip setuptools wheel
    python -m pip install -U git+https://github.com/Cog-Creators/Red-DiscordBot@V3/develop#egg=Red-DiscordBot[postgres]

archlinux_task:
  container:
    image: archlinux:latest
  install_instructions_script: |-
    pacman --noconfirm -Syu python python-pip git jre11-openjdk-headless base-devel nano

  <<: *INSTALL_RED_VENV

centos_7_task:
  compute_engine_instance:
    image_project: centos-cloud
    image: family/centos-7
  install_instructions_script: |-
    yum -y groupinstall development
    yum -y install zlib-devel bzip2 bzip2-devel readline-devel sqlite sqlite-devel openssl-devel xz xz-devel tk-devel libffi-devel findutils java-11-openjdk-headless nano
    yum -y install centos-release-scl
    yum -y install devtoolset-8-gcc devtoolset-8-gcc-c++
    echo "source scl_source enable devtoolset-8" >> ~/.profile

    yum -y install https://repo.ius.io/ius-release-el7.rpm
    yum -y swap git git224

  <<: *INSTALL_PYENV_AND_RED
centos_8_task:
  compute_engine_instance:
    image_project: centos-cloud
    image: family/centos-8
  install_instructions_script: |-
    yum -y install epel-release
    yum -y update
    yum -y groupinstall development
    yum -y install git zlib-devel bzip2 bzip2-devel readline-devel sqlite sqlite-devel openssl-devel xz xz-devel tk-devel libffi-devel findutils java-11-openjdk-headless nano

  <<: *INSTALL_PYENV_AND_RED

debian_10_buster_task:
  compute_engine_instance:
    image_project: debian-cloud
    image: family/debian-10
  install_instructions_script: |-
    apt update
    apt -y install make build-essential libssl-dev zlib1g-dev libbz2-dev libreadline-dev libsqlite3-dev wget curl llvm libncurses5-dev xz-utils tk-dev libxml2-dev libxmlsec1-dev libffi-dev liblzma-dev libgdbm-dev uuid-dev python3-openssl git openjdk-11-jre-headless nano
    CXX=/usr/bin/g++

  <<: *INSTALL_PYENV_AND_RED
debian_11_bullseye_task:
  compute_engine_instance:
    image_project: debian-cloud
    image: family/debian-11
  install_instructions_script: |-
    apt update
    apt -y install python3 python3-dev python3-venv python3-pip git openjdk-11-jre-headless build-essential nano

  <<: *INSTALL_RED_VENV

fedora_coreos_33_task:
  compute_engine_instance:
    image_project: fedora-coreos-cloud
    image: fedora-coreos-33-20210426-3-0-gcp-x86-64
  install_instructions_script: |-
    dnf -y install python39 git java-11-openjdk-headless @development-tools nano
  <<: *INSTALL_RED_VENV
fedora_coreos_34_task:
  compute_engine_instance:
    image_project: fedora-coreos-cloud
    image: family/fedora-coreos-stable
  install_instructions_script: |-
    dnf -y install python39 git java-11-openjdk-headless @development-tools nano
  <<: *INSTALL_RED_VENV

opensuse_leap_15_2_task:
  compute_engine_instance:
    image_project: opensuse-cloud
    image: opensuse-leap-15-2-v20200702
  install_instructions_script: |-
    source /etc/os-release
    zypper -n ar -f https://download.opensuse.org/repositories/home:/Rotkraut:/Opt-Python/openSUSE_Leap_${VERSION_ID}/ Opt-Python
    zypper -n --gpg-auto-import-keys ref

    zypper -n install opt-python39 opt-python39-setuptools git-core java-11-openjdk-headless nano
    zypper -n install -t pattern devel_basis

    echo 'export PATH="/opt/python/bin:$PATH"' | tee /etc/profile.d/opt-python.sh
    source /etc/profile.d/opt-python.sh

    /opt/python/bin/python3.9 -m ensurepip --altinstall
  <<: *INSTALL_RED_VENV
opensuse_leap_15_3_task:
  compute_engine_instance:
    image_project: opensuse-cloud
    image: family/opensuse-leap
  install_instructions_script: |-
    source /etc/os-release
    zypper -n ar -f https://download.opensuse.org/repositories/home:/Rotkraut:/Opt-Python/openSUSE_Leap_${VERSION_ID}/ Opt-Python
    zypper -n --gpg-auto-import-keys ref

    zypper -n install opt-python39 opt-python39-setuptools git-core java-11-openjdk-headless nano
    zypper -n install -t pattern devel_basis

    echo 'export PATH="/opt/python/bin:$PATH"' | tee /etc/profile.d/opt-python.sh
    source /etc/profile.d/opt-python.sh

    /opt/python/bin/python3.9 -m ensurepip --altinstall
  <<: *INSTALL_RED_VENV
opensuse_tumbleweed_task:
  container:
    image: opensuse/tumbleweed:latest
  install_instructions_script: |-
    zypper -n install python39-base python39-pip git-core java-11-openjdk-headless nano
    zypper -n install -t pattern devel_basis
  <<: *INSTALL_RED_VENV

ubuntu_1804_bionic_task:
  compute_engine_instance:
    image_project: ubuntu-os-cloud
    image: family/ubuntu-1804-lts
  install_instructions_script: |-
    apt update
    apt -y install software-properties-common
    add-apt-repository -y ppa:git-core/ppa

    add-apt-repository -y ppa:deadsnakes/ppa

    apt -y install python3.9 python3.9-dev python3.9-venv python3-pip git openjdk-11-jre-headless build-essential nano
  <<: *INSTALL_RED_VENV
ubuntu_2004_focal_task:
  compute_engine_instance:
    image_project: ubuntu-os-cloud
    image: family/ubuntu-2004-lts
  install_instructions_script: |-
    apt update
    apt -y install software-properties-common
    add-apt-repository -y ppa:git-core/ppa

    apt -y install python3.9 python3.9-dev python3.9-venv python3-pip git openjdk-11-jre-headless build-essential nano

  <<: *INSTALL_RED_VENV
ubuntu_2104_rolling_task:
  compute_engine_instance:
    image_project: ubuntu-os-cloud
    image: family/ubuntu-2104-lts
  install_instructions_script: |-
    apt update
    apt -y install software-properties-common
    add-apt-repository -yu ppa:git-core/ppa

    apt -y install make build-essential libssl-dev zlib1g-dev libbz2-dev libreadline-dev libsqlite3-dev wget curl llvm libncurses5-dev xz-utils tk-dev libxml2-dev libxmlsec1-dev libffi-dev liblzma-dev libgdbm-dev uuid-dev python3-openssl git openjdk-11-jre-headless nano
    CXX=/usr/bin/g++

  <<: *INSTALL_PYENV_AND_RED

macos_catalina_task:
  macos_instance:
    image: catalina-base
  # using `.bash_profile` over `.profile` in CI-only (see GH-3852)
  install_instructions_script: |-
    /bin/bash -c "$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/master/install.sh)"

    brew install python@3.9
    echo 'export PATH="/usr/local/opt/python@3.9/bin:$PATH"' >> ~/.bash_profile
    source ~/.bash_profile
    brew install git
    brew install --cask adoptopenjdk/openjdk/adoptopenjdk11

  <<: *INSTALL_RED_VENV

windows_task:
  windows_container:
    image: cirrusci/windowsservercore:2019
  install_instructions_script:
    ps: |-
      Set-ExecutionPolicy Bypass -Scope Process -Force
      iex ((New-Object System.Net.WebClient).DownloadString('https://chocolatey.org/install.ps1'))
      choco upgrade git --params "/GitOnlyOnPath /WindowsTerminal" -y
      choco upgrade visualstudio2019-workload-vctools -y
      choco upgrade python3 -y --version 3.9.7

      choco upgrade adoptopenjdk11jre -y
  install_red_script: |-
    py -3.9 -m venv "%userprofile%\redenv"

    "%userprofile%\redenv\Scripts\activate.bat"

    python -m pip install -U pip setuptools wheel
    python -m pip install -U git+https://github.com/Cog-Creators/Red-DiscordBot@V3/develop#egg=Red-DiscordBot[postgres]
