name: Test install instructions

on:
  workflow_dispatch:
  push:
  schedule:
    - cron: '5 16 * * *'

env:
  RED_PACKAGE_NAME: |-
    ${{
      github.ref_name == 'dev' && 'https://github.com/Cog-Creators/Red-DiscordBot/tarball/V3/develop#egg=Red-DiscordBot'
      || startsWith(github.ref_name, 'pull/') && format(
        'https://github.com/Cog-Creators/Red-DiscordBot/tarball/refs/{0}/merge#egg=Red-DiscordBot',
        github.ref_name
      )
      || 'Red-DiscordBot'
    }}

jobs:
  install:
    strategy:
      fail-fast: false
      matrix:
        include:
          # macOS
          #
          # 1. using `.bash_profile` over `.profile` in CI-only (see GH-3852)
          # 2. remove python@3 and python@3.11 executables before performing steps in GH Actions only
          - os: macos-11
            run: |-
              rm /usr/local/bin/{2to3{,-3.10,-3.11},{idle3,pydoc3}{,.10,.11},python3{,.10,.11}{,-config}}

              /bin/bash -c "$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/master/install.sh)"

              brew install python@3.9
              echo 'export PATH="/usr/local/opt/python@3.9/bin:$PATH"' >> ~/.bash_profile
              source ~/.bash_profile
              brew install git
              brew tap homebrew/cask-versions
              brew install --cask temurin11
            venv_method: "venv39"
          - os: macos-12
            run: |-
              rm /usr/local/bin/{2to3{,-3.10,-3.11},{idle3,pydoc3}{,.10,.11},python3{,.10,.11}{,-config}}

              /bin/bash -c "$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/master/install.sh)"

              brew install python@3.9
              echo 'export PATH="/usr/local/opt/python@3.9/bin:$PATH"' >> ~/.bash_profile
              source ~/.bash_profile
              brew install git
              brew tap homebrew/cask-versions
              brew install --cask temurin11
            venv_method: "venv39"

    runs-on: ${{ matrix.os || 'ubuntu-latest' }}
    container: ${{ matrix.container }}
    env:
      DEBIAN_FRONTEND: noninteractive

    steps:
      # Clone Red-Install-Tests repository
      - uses: actions/checkout@v3

      # Installing requirements
      - name: Run install instructions (Linux/Mac)
        id: install_linux
        run: ${{ matrix.run }}
        if: >-
          runner.os != 'Windows'
        shell: bash -leo pipefail {0}

      # Making a virtual environment and installing Red
      - name: Install Red inside venv on Python 3.9 (Linux/Mac)
        if: >-
          matrix.venv_method == 'venv39'
        shell: bash -leo pipefail {0}
        run: |-
          python3.9 -m venv ~/redenv

          source ~/redenv/bin/activate

          python -m pip install -U pip setuptools wheel
          python -m pip install -U "$RED_PACKAGE_NAME"

      - name: Run tests inside venv on Python 3.9.
        if: >-
          matrix.venv_method == 'venv39'
        shell: bash -leo pipefail {0}
        run: |-
          source ~/redenv/bin/activate
          python ./run_tests.py
